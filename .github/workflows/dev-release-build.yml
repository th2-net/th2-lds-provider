name: Build and publish Docker distributions to Github Container Registry ghcr.io

on:
  push:
    tags:
      - \d+.\d+.\d+-dev

jobs:
  app-version:
    name: Extract app version
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-workflow.yml@main
    with:
      project-path: app
  get-previous-tag:
    name: Get previous tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 100
          fetch-tags: true
      - id: previous-tag
        run: |
          FOUND_TAG=$(git tag --list --sort=-version:refname '*.*.*-dev' | head --lines 2 | tail --lines 1)
          echo "result=$FOUND_TAG" >> "$GITHUB_OUTPUT"
          [[ -z $(echo "$FOUND_TAG") ]] && { echo "No tag found..."; exit 1; } || { echo "Tag found: ${FOUND_TAG}"; }
    outputs:
      tag: ${{ steps.previous-tag.outputs.result }}
  changes:
    name: Collect changed files
    runs-on: ubuntu-latest
    needs:
      - get-previous-tag
    outputs:
      app: ${{ steps.filter.outputs.app }}
      grpc: ${{ steps.filter.outputs.grpc }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ needs.get-previous-tag.outputs.tag }}
          filters: |
            app:
              - 'app/gradle.properties'
            grpc:
              - 'grpc/gradle.properties'
            utils:
              - 'utils/gradle.properties'
  grpc-version:
    name: Extract gRPC version
    needs:
      - changes
    if: ${{ needs.changes.outputs.grpc == 'true' }}
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-workflow.yml@main
    with:
      project-path: grpc
  utils-version:
    name: Extract utils version
    needs:
      - changes
    if: ${{ needs.changes.outputs.utils == 'true' }}
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-workflow.yml@main
    with:
      project-path: utils
  build-and-publish-grpc-java:
    name: Build and publish Java gRPC distributions
    runs-on: 'ubuntu-latest'
    needs:
      - changes
    if: ${{ needs.changes.outputs.grpc == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 'zulu' '21'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Build with Gradle
        run: ./gradlew --info -Pversion_suffix='dev' clean build :grpc-lw-data-provider:publish closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SONATYPE_GPG_ARMORED_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}

  build-and-publish-grpc-python:
    name: Build and publish Python distributions to PyPI
    needs:
      - build-and-publish-grpc-java
      - grpc-version
      - changes
    if: ${{ needs.changes.outputs.grpc == 'true' }}
    uses: th2-net/.github/.github/workflows/compaund-python-grpc-pypi-publication.yml@main
    with:
      custom-version: ${{ needs.grpc-version.outputs.version }}rc1
      project-path: grpc
      java-version: '21'
    secrets:
      pypi_password: ${{ secrets.PYPI_PASSWORD }}

  build-and-publish-utils:
    name: Build and publish utils library
    runs-on: 'ubuntu-latest'
    needs:
      - build-and-publish-grpc-java
      - changes
    if: |
      always() && 
      (needs.changes.outputs.utils == 'true' || needs.changes.outputs.grpc == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 'zulu' '21'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Build with Gradle
        run: ./gradlew --info -Pversion_suffix='dev' clean build :lw-data-provider-utils:publish closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SONATYPE_GPG_ARMORED_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}

  owasp-scan:
    uses: th2-net/.github/.github/workflows/owasp-gradle-scan.yml@main
    with:
      multiproject: true
      javaVersion: '21'
    secrets:
      nvd-api-key: ${{ secrets.NVD_APIKEY }}
      cisa-domain: ${{ secrets.CISA_DOMAIN }}
      cisa-user: ${{ secrets.CISA_USER }}
      cisa-password: ${{ secrets.CISA_PWD }}

  license-scan:
    uses: th2-net/.github/.github/workflows/license_check.yml@customize-java
    needs: [app-version]
    with:
      version: ${{ needs.app-version.outputs.version }}-dev
      java-version: '21'

  publish-docker:
    name: Build and publish docker image
    if: |
      always() &&
      (needs.changes.outputs.app == 'true' || needs.changes.outputs.grpc == 'true')
    needs:
      - build-and-publish-grpc-python
      - build-and-publish-grpc-java
      - app-version
    uses: th2-net/.github/.github/workflows/compaund-java-docker-push.yml@customize-java
    with:
      javaVersion: '21'
      docker-username: ${{ github.actor }}
      version: ${{ needs.app-version.outputs.version }}-dev
      versionNumber: ${{ needs.app-version.outputs.version }}
      dockerContext: '.'
      gradleParameters: '["clean", "build", "dockerPrepare"]'
    secrets:
      docker-password: ${{ secrets.GITHUB_TOKEN }}

  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    needs:
      - publish-docker
      - app-version
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/${{ github.repository }}:${{ needs.app-version.outputs.version }}-dev
      target: 'os,library'
      sensitivity: 'CRITICAL,HIGH,MEDIUM'
