/*******************************************************************************
 * Copyright 2009-2022 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

plugins {
    id 'com.exactpro.th2.common-convensions'
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

ext {
    dockerImageVersion = release_version
    cradleApiVersion = '5.0.0-dev-version-5-3436384591-6fcd0d8-SNAPSHOT'
}

dependencies {
    implementation('com.exactpro.th2:common:4.0.0-th2-2150-books-pages-2635632236-SNAPSHOT') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'com.exactpro.th2', module: 'cradle-core'
        exclude group: 'com.exactpro.th2', module: 'cradle-cassandra'
    }

    implementation 'org.eclipse.jetty:jetty-server:9.4.44.v20210927'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.44.v20210927'

    implementation('org.apache.logging.log4j:log4j-core') {
        because('need to have log4j core inside the classpath')
    }
    implementation('org.apache.logging.log4j:log4j-slf4j2-impl') {
        because('need loging impl')
    }

    implementation("com.exactpro.th2:cradle-cassandra:$cradleApiVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation('net.jpountz.lz4:lz4:1.3.0') {
        because('cassandra driver requires lz4 impl in classpath for compression')
    }
    implementation project(':grpc-lw-data-provider')

    implementation('io.prometheus:simpleclient') {
        because('need add custom metrics to provider')
    }

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation('org.jetbrains.kotlin:kotlin-reflect') {
        because('consistent version of kotlin in classpath. Jackson uses 1.3.72 right now')
    }
}

applicationName = 'service'

distTar {
    archiveFileName.set("${applicationName}.tar")
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

application {
    mainClass.set('com.exactpro.th2.lwdataprovider.MainKt')
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

// For GitHub only
nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}